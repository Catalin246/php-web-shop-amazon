/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./app/public/assets/js/category.js":
/*!******************************************!*\
  !*** ./app/public/assets/js/category.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./home.js */ \"./app/public/assets/js/home.js\");\n// category.js\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const categoryContainer = document.getElementById(\"category-container\");\r\n    const articleContainer = document.querySelector(\".grid.grid-cols-3\");\r\n\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const selectedCategoryId = urlParams.get(\"categoryId\");\r\n\r\n    fetch(\"/api/category\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.status === \"success\") {\r\n                categoryContainer.innerHTML = \"\";\r\n\r\n                let firstCategoryId = null;\r\n\r\n                data.data.forEach((category, index) => {\r\n                    const categoryElement = document.createElement(\"label\");\r\n                    categoryElement.classList.add(\"flex\", \"items-center\");\r\n                    categoryElement.innerHTML = `  \r\n                        <input type=\"radio\" name=\"category\" class=\"mr-2\" value=\"${category.id}\" ${selectedCategoryId == category.id || (!selectedCategoryId && index === 0) ? 'checked' : ''}> ${category.name}\r\n                    `;\r\n                    categoryContainer.appendChild(categoryElement);\r\n\r\n                    if (index === 0) {\r\n                        firstCategoryId = category.id;\r\n                    }\r\n                });\r\n\r\n                document.querySelectorAll(\"input[name='category']\").forEach(input => {\r\n                    input.addEventListener(\"change\", function () {\r\n                        window.location.href = `/home/category?categoryId=${this.value}`;\r\n                    });\r\n                });\r\n\r\n                fetchArticles(selectedCategoryId || firstCategoryId);\r\n            }\r\n        })\r\n        .catch(error => console.error(\"Error fetching categories:\", error));\r\n\r\n    function fetchArticles(categoryId) {\r\n        fetch(`/api/article?categoryId=${categoryId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                articleContainer.innerHTML = \"\";\r\n\r\n                if (data.status === \"success\" && data.data.length > 0) {\r\n                    data.data.forEach(article => {\r\n                        const li = document.createElement(\"li\");\r\n                        li.id = article.id;\r\n\r\n                        const cardDiv = document.createElement(\"a\");\r\n                        cardDiv.classList.add(\"card\");\r\n\r\n                        const cardImage = document.createElement(\"img\");\r\n                        cardImage.classList.add(\"card-img-top\");\r\n                        cardImage.src = `../${article.image}`;\r\n                        cardImage.alt = \"Card image cap\";\r\n\r\n                        const cardBody = document.createElement(\"div\");\r\n                        cardBody.classList.add(\"card-body\");\r\n\r\n                        const cardTitle = document.createElement(\"h3\");\r\n                        cardTitle.classList.add(\"card-title\");\r\n                        cardTitle.textContent = article.name;\r\n\r\n                        const priceParagraph = document.createElement(\"p\");\r\n                        priceParagraph.classList.add(\"card-text\");\r\n                        priceParagraph.textContent = \"Price: \" + article.price + \" â‚¬\";\r\n\r\n                        const descriptionParagraph = document.createElement(\"p\");\r\n                        descriptionParagraph.classList.add(\"card-text\");\r\n                        descriptionParagraph.textContent = article.description;\r\n\r\n                        const addToCartButton = document.createElement(\"a\");\r\n                        addToCartButton.classList.add(\"btn\", \"btn-primary\");\r\n                        addToCartButton.textContent = \"Add to cart\";\r\n                        addToCartButton.addEventListener(\"click\", _home_js__WEBPACK_IMPORTED_MODULE_0__.toggleOffcanvas);\r\n                        addToCartButton.addEventListener(\"click\", _home_js__WEBPACK_IMPORTED_MODULE_0__.addArticleToCart);\r\n\r\n                        cardBody.appendChild(cardTitle);\r\n                        cardBody.appendChild(priceParagraph);\r\n                        cardBody.appendChild(descriptionParagraph);\r\n                        cardBody.appendChild(addToCartButton);\r\n\r\n                        cardDiv.appendChild(cardImage);\r\n                        cardDiv.appendChild(cardBody);\r\n\r\n                        cardDiv.addEventListener(\"click\", _home_js__WEBPACK_IMPORTED_MODULE_0__.toggleOffcanvas);\r\n                        cardDiv.addEventListener(\"click\", _home_js__WEBPACK_IMPORTED_MODULE_0__.addArticleToCart);\r\n\r\n                        li.appendChild(cardDiv);\r\n\r\n                        articleContainer.appendChild(li);\r\n                    });\r\n                } else {\r\n                    articleContainer.innerHTML = \"<p class='text-gray-500'>No articles available for this category.</p>\";\r\n                }\r\n            })\r\n            .catch(error => console.error(\"Error fetching articles:\", error));\r\n    }\r\n});\r\n\n\n//# sourceURL=webpack://php-web-shop-amazon/./app/public/assets/js/category.js?");

/***/ }),

/***/ "./app/public/assets/js/home.js":
/*!**************************************!*\
  !*** ./app/public/assets/js/home.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addArticleToCart: () => (/* binding */ addArticleToCart),\n/* harmony export */   closeOffcanvas: () => (/* binding */ closeOffcanvas),\n/* harmony export */   toggleOffcanvas: () => (/* binding */ toggleOffcanvas)\n/* harmony export */ });\n/* harmony import */ var _category_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./category.js */ \"./app/public/assets/js/category.js\");\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    fetch('http://localhost/api/category')\n        .then(response => response.json())\n        .then(data => {\n            const categoryContainer = document.getElementById('categoryContainer');\n            const additionalContainer = document.getElementById('additionalContainer');\n\n            data.data.slice(0, 4).forEach(category => {\n                createCategoryElement(category, categoryContainer);\n            });\n\n            data.data.slice(4, 8).forEach(category => {\n                createCategoryElement(category, additionalContainer);\n            });\n        })\n        .catch(error => console.error('Error fetching category data:', error));\n\n    function createCategoryElement(category, container) {\n        const link = document.createElement('a');\n        link.href = `/home/category?categoryId=${category.id}`;\n        link.className = 'category-link';\n        link.style.textDecoration = 'none';\n\n        const categoryBox = document.createElement('div');\n        categoryBox.className = 'box box-c';\n\n        const title = document.createElement('h3');\n        title.textContent = category.description;\n\n        const image = document.createElement('div');\n        const imgElement = document.createElement('img');\n        imgElement.src = category.image_url;\n        imgElement.alt = category.name;\n        image.appendChild(imgElement);\n\n        categoryBox.appendChild(title);\n        categoryBox.appendChild(image);\n\n        const seeMoreButton = document.createElement('a');\n        seeMoreButton.href = `/home/category?categoryId=${category.id}`;\n        seeMoreButton.textContent = 'See More';\n        seeMoreButton.className = 'see-more-btn';\n\n        categoryBox.appendChild(seeMoreButton)\n\n        link.appendChild(categoryBox);\n        container.appendChild(link);\n    }\n    \n    loadShoppingCartFromStorage();\n    fetchAndDisplayArticles(1, \"book-products\");\n    fetchAndDisplayArticles(2, \"pc-products\");\n\n    const toggleButton = document.getElementById(\"toggle-btn\");\n    const closeButton = document.getElementById(\"close-btn\");\n\n    if (toggleButton) {\n        toggleButton.addEventListener(\"click\", toggleOffcanvas);\n    }\n\n    if (closeButton) {\n        closeButton.addEventListener(\"click\", closeOffcanvas);\n    }\n});\n\n// Fetching and displaying articles for each category\nfunction fetchAndDisplayArticles(categoryId, elementId) {\n    fetch(`http://localhost/api/article?categoryId=${categoryId}`)\n        .then(response => response.json())\n        .then(articles => {\n            articles.data.forEach(article => {\n                const li = document.createElement(\"li\");\n                li.id = article.id;\n\n                const cardDiv = document.createElement(\"a\");\n                cardDiv.classList.add(\"card\");\n\n                const cardImage = document.createElement(\"img\");\n                cardImage.classList.add(\"card-img-top\");\n                cardImage.src = article.image;\n                cardImage.alt = \"Card image cap\";\n\n                const cardBody = document.createElement(\"div\");\n                cardBody.classList.add(\"card-body\");\n\n                const cardTitle = document.createElement(\"h3\");\n                cardTitle.classList.add(\"card-title\");\n                cardTitle.textContent = article.name;\n\n                const priceParagraph = document.createElement(\"p\");\n                priceParagraph.classList.add(\"card-text\");\n                priceParagraph.textContent = \"Price: \" + article.price + \" â‚¬\";\n\n                const descriptionParagraph = document.createElement(\"p\");\n                descriptionParagraph.classList.add(\"card-text\");\n                descriptionParagraph.textContent = article.description;\n\n                const addToCartButton = document.createElement(\"a\");\n                addToCartButton.classList.add(\"btn\", \"btn-primary\");\n                addToCartButton.textContent = \"Add to cart\";\n                addToCartButton.addEventListener(\"click\", toggleOffcanvas);\n                addToCartButton.addEventListener(\"click\", addArticleToCart);\n\n                cardBody.appendChild(cardTitle);\n                cardBody.appendChild(priceParagraph);\n                cardBody.appendChild(descriptionParagraph);\n                cardBody.appendChild(addToCartButton);\n\n                cardDiv.appendChild(cardImage);\n                cardDiv.appendChild(cardBody);\n\n                cardDiv.addEventListener(\"click\", toggleOffcanvas);\n                cardDiv.addEventListener(\"click\", addArticleToCart);\n\n                li.appendChild(cardDiv);\n\n                document.getElementById(elementId).appendChild(li);\n            });\n        })\n        .catch(error => console.error(\"Error fetching articles:\", error));\n}\n\nlet shoppingCart = [];\n\n// Function to load the shopping cart from LocalStorage\nfunction loadShoppingCartFromStorage() {\n    const savedCart = localStorage.getItem(\"shoppingCart\");\n    if (savedCart) {\n        shoppingCart = JSON.parse(savedCart);\n        updateCartDisplay();\n    }\n}\n\n// Function to update the shopping cart display\nfunction updateCartDisplay() {\n    const cartItemsContainer = document.getElementById('cart-items');\n    cartItemsContainer.innerHTML = ''; // Clear the current items\n    shoppingCart.forEach(article => {\n        const cartItem = createCartItemElement(article);\n        cartItemsContainer.appendChild(cartItem);\n    });\n    updateCartTotal();\n}\n\n// Function to create cart item HTML\nfunction createCartItemElement(article) {\n    const cartItem = document.createElement(\"div\");\n    cartItem.id = \"item-\" + article.id;\n    cartItem.classList.add(\"cart-item\");\n\n    const itemInfo = document.createElement(\"div\");\n    itemInfo.classList.add(\"item-info\");\n\n    const itemImage = document.createElement(\"img\");\n    itemImage.src = \"../\" + article.image;\n    itemImage.alt = \"Product Image\";\n    itemInfo.appendChild(itemImage);\n\n    const itemDetails = document.createElement(\"div\");\n    itemDetails.innerHTML = `\n        <div class=\"item-name\">${article.name}</div>\n        <div class=\"item-price\">Price: ${article.price} â‚¬</div>\n    `;\n    itemInfo.appendChild(itemDetails);\n\n    cartItem.appendChild(itemInfo);\n\n    const itemQuantity = document.createElement(\"div\");\n    itemQuantity.classList.add(\"item-quantity\");\n\n    const minusButton = document.createElement(\"button\");\n    minusButton.innerHTML = `<i class=\"fas fa-minus\"></i>`;\n    minusButton.addEventListener(\"click\", () => updateQuantity(cartItem, article, -1));\n\n    const quantityValue = document.createElement(\"span\");\n    quantityValue.textContent = \"1\"; // Placeholder, we'll update this later\n\n    const plusButton = document.createElement(\"button\");\n    plusButton.innerHTML = `<i class=\"fas fa-plus\"></i>`;\n    plusButton.addEventListener(\"click\", () => updateQuantity(cartItem, article, 1));\n\n    itemQuantity.appendChild(minusButton);\n    itemQuantity.appendChild(quantityValue);\n    itemQuantity.appendChild(plusButton);\n\n    cartItem.appendChild(itemQuantity);\n\n    const removeButton = document.createElement(\"button\");\n    removeButton.classList.add(\"remove-item-btn\");\n    removeButton.innerHTML = `<i class=\"fas fa-times\"></i>`;\n    removeButton.addEventListener(\"click\", () => removeCartItem(cartItem, article));\n\n    cartItem.appendChild(removeButton);\n\n    return cartItem;\n}\n\n// Function to update the quantity of an item in the cart\nfunction updateQuantity(cartItem, article, change) {\n    const quantityElement = cartItem.querySelector(\".item-quantity span\");\n    let currentQuantity = parseInt(quantityElement.textContent);\n    currentQuantity += change;\n    if (currentQuantity < 1) {\n        removeCartItem(cartItem, article);\n    } else {\n        quantityElement.textContent = currentQuantity;\n        updateItemTotal(cartItem, article, currentQuantity);\n        saveCartToStorage();\n    }\n}\n\n// Function to remove an item from the cart\nfunction removeCartItem(cartItem, article) {\n    const index = shoppingCart.findIndex(item => item.id === article.id);\n    if (index !== -1) {\n        shoppingCart.splice(index, 1);\n        cartItem.remove();\n        saveCartToStorage();\n        updateCartTotal();\n    }\n}\n\n// Function to update the total price of an item in the cart\nfunction updateItemTotal(cartItem, article, quantity) {\n    let itemPrice = parseFloat(article.price);\n    let totalPrice = (itemPrice * quantity).toFixed(2);\n\n    let priceParagraph = cartItem.querySelector(\".item-info .item-price\");\n    if (priceParagraph) {\n        priceParagraph.textContent = `Price: ${totalPrice} â‚¬`;\n    }\n\n    updateCartTotal();\n}\n\n// Function to update the total price of the cart\nfunction updateCartTotal() {\n    let cartTotalElement = document.getElementById(\"cart-total\");\n    let total = shoppingCart.reduce((sum, item) => {\n        let quantity = parseInt(document.getElementById(\"item-\" + item.id).querySelector(\".item-quantity span\").textContent);\n        return sum + item.price * quantity;\n    }, 0).toFixed(2);\n\n    cartTotalElement.innerHTML = \"\";\n    if (total == 0) {\n        cartTotalElement.innerHTML = `<div class=\"empty-cart-message\">Your cart is empty. Start shopping now!</div>`;\n        let checkoutBtn = document.getElementById(\"checkout-btn\");\n        if (checkoutBtn) {\n            checkoutBtn.style.display = 'none';\n        }\n    } else {\n        cartTotalElement.innerHTML = `Cart Total: ${total} â‚¬`;\n        let checkoutBtn = document.getElementById(\"checkout-btn\");\n        if (checkoutBtn) {\n            checkoutBtn.style.display = 'block';\n        }\n    }\n}\n\n// Function to save the cart to LocalStorage\nfunction saveCartToStorage() {\n    localStorage.setItem(\"shoppingCart\", JSON.stringify(shoppingCart));\n}\n\n// Function to add article to the cart\nfunction addArticleToCart(event) {\n    const articleId = event.target.closest(\"li\").id;\n\n    fetchArticleById(articleId)\n        .then(article => {\n            const existingCartItem = shoppingCart.find(item => item.id === article.id);\n\n            if (existingCartItem) {\n                const cartItemEl = document.getElementById(`item-${article.id}`);\n                updateQuantity(cartItemEl, article, 1);\n            } else {\n                shoppingCart.push(article);\n                updateCartDisplay();\n                saveCartToStorage(); // Save updated cart\n            }\n        })\n        .catch(error => {\n            console.error(\"Error adding article to cart:\", error);\n        });\n}\n\nfunction fetchArticleById(articleId) {\n    return fetch(`http://localhost/api/article?id=${articleId}`)\n        .then(response => response.json())\n        .then(data => data.data)\n        .catch(error => {\n            console.error(\"Error fetching article:\", error);\n            throw error;\n        });\n}\n\nfunction toggleOffcanvas() {\n    const offcanvas = document.getElementById('offcanvasRight');\n    offcanvas.classList.toggle('open');\n\n    const isOpen = offcanvas.classList.contains('open');\n\n    offcanvas.style.display = 'block';\n}\n\nfunction closeOffcanvas() {\n    const offcanvas = document.getElementById('offcanvasRight');\n    offcanvas.classList.remove('open');\n\n    offcanvas.style.display = 'none';\n}\n\n\n//# sourceURL=webpack://php-web-shop-amazon/./app/public/assets/js/home.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./app/public/assets/js/category.js");
/******/ 	
/******/ })()
;