/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app/public/assets/js/user.js":
/*!**************************************!*\
  !*** ./app/public/assets/js/user.js ***!
  \**************************************/
/***/ (() => {

eval("document.addEventListener('DOMContentLoaded', function () {\n    const registrationForm = document.getElementById('registrationForm');\n\n    if (registrationForm) {\n        registrationForm.addEventListener('submit', function (event) {\n            event.preventDefault();\n\n            const name = document.getElementById('registerName').value;\n            const email = document.getElementById('registerEmail').value;\n            const password = document.getElementById('registerPassword').value;\n            const passwordConfirm = document.getElementById('registerPasswordConfirm').value;\n\n            if (!name || !email || !password || !passwordConfirm) {\n                alert('Please fill in all fields.');\n                return;\n            }\n\n            if (password !== passwordConfirm) {\n                alert('Passwords do not match.');\n                return;\n            }\n\n            const formData = {\n                name: name,\n                email: email,\n                password: password,\n                passwordConfirm: passwordConfirm,\n                phone: \"\",\n                userRoleId: 1,\n            };\n\n            fetch('http://localhost/api/user', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    window.location.href = '/login/index';\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                });\n        });\n    }\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const userRoles = {\n        1: 'User',\n        2: 'Admin'\n    };\n\n    fetch('/api/user')\n        .then(response => response.json())\n        .then(data => {\n            const tableBody = document.querySelector('#userTable tbody');\n\n            data.data.forEach(user => {\n                const row = tableBody.insertRow();\n                row.innerHTML = `\n                    <tr data-userid=\"${user.id}\">\n                    <td>${user.id}</td>\n                    <td>${user.email}</td>\n                    <td>${user.name}</td>\n                    <td>${user.phone}</td>\n                    <td>${userRoles[user.user_role_id]}</td>\n                    <td class=\"d-flex-custom justify-content-center\">\n                        <a href=\"/user/edit?id=${user.id}\"><button update-userid=\"${user.id} type=\"button\" class=\"btn btn-warning btn-sm mx-2\">Edit</button></a>\n                        <button delete-userid=\"${user.id}\" type=\"button\" class=\"btn btn-danger btn-sm mx-2\">Delete</button>\n                    </td>\n                    </tr>\n                `;\n            });\n\n            const deleteButtons = document.querySelectorAll('#userTable tbody button[delete-userid]');\n            deleteButtons.forEach(deleteButton => {\n                deleteButton.addEventListener('click', function () {\n                    const userId = this.getAttribute('delete-userid');\n                    deleteUser(userId);\n                });\n            });\n        })\n        .catch(error => console.error('Error fetching data:', error));\n\n    function deleteUser(userId) {\n        const confirmDelete = confirm('Are you sure you want to delete this user?');\n        if (!confirmDelete) {\n            return;\n        }\n\n        fetch(`/api/user?id=${userId}`, {\n            method: 'DELETE',\n        })\n            .then(response => {\n                if (response.ok) {\n                    location.reload()\n                    console.log('User deleted successfully');\n                } else {\n                    console.error('Error deleting user');\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n            });\n    }\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const addUserForm = document.getElementById('addUserForm');\n\n    if (addUserForm) {\n        addUserForm.addEventListener('submit', function (event) {\n            event.preventDefault();\n\n            const name = document.getElementById('addName').value;\n            const email = document.getElementById('addEmail').value;\n            const phone = document.getElementById('addPhone').value;\n            const role = document.getElementById('addRole').value;\n            const pass = document.getElementById('addPassword').value;\n            const repeatPass = document.getElementById('addRepeatPassword').value;\n\n            if (pass.length < 8) {\n                alert('Password must be at least 8 characters long.');\n                return;\n            }\n\n            if (pass !== repeatPass) {\n                alert('Passwords do not match.');\n                return;\n            }\n\n            const formData = {\n                name: name,\n                email: email,\n                phone: phone,\n                user_role_id: role,\n                password: pass,\n            };\n\n            fetch('/api/user', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 'success') {\n                        window.location.href = '/user';\n                    } else {\n                        console.error('Error updating user:', data.message);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                });\n        });\n    }\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const editUserForm = document.getElementById('editUserForm');\n\n    if (editUserForm) {\n        const userId = getUserIdFromUrl();\n\n        fetch(`/api/user?id=${userId}`)\n            .then(response => response.json())\n            .then(data => {\n                document.getElementById('editName').value = data.data.name;\n                document.getElementById('editEmail').value = data.data.email;\n                document.getElementById('editPhone').value = data.data.phone;\n                document.getElementById('editRole').value = data.data.user_role_id;\n            })\n            .catch(error => console.error('Error fetching user data:', error));\n\n        editUserForm.addEventListener('submit', function (event) {\n            event.preventDefault();\n\n            const name = document.getElementById('editName').value;\n            const email = document.getElementById('editEmail').value;\n            const phone = document.getElementById('editPhone').value;\n            const role = document.getElementById('editRole').value;\n\n            console.log(document.getElementById('editRole').value);\n\n            const formData = {\n                name: name,\n                email: email,\n                phone: phone,\n                user_role_id: role,\n            };\n\n            fetch(`/api/user?id=${userId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formData),\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.status === 'success') {\n                        window.location.href = '/user';\n                    } else {\n                        console.error('Error updating user:', data.message);\n                    }\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                });\n        });\n    }\n\n    function getUserIdFromUrl() {\n        const url = new URL(window.location.href);\n\n        const userId = url.searchParams.get('id');\n\n        return userId;\n    }\n});\n\n\n\n\n//# sourceURL=webpack://php-web-shop-amazon/./app/public/assets/js/user.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./app/public/assets/js/user.js"]();
/******/ 	
/******/ })()
;